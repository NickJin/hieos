<?xml version="1.0" encoding="UTF-8"?>
<!--


     Copyright (C) 2010 SYSNET International, Inc. <support@sysnetint.com>

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied. See the License for the specific language governing
     permissions and limitations under the License.


-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-lazy-init="true">

	<!--
		===================================================================
	-->
	<!--
		AOP: Configuration and Aspects
	-->
	<!--
		===================================================================
	-->
	<aop:config>
		<aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice"
			pointcut="execution(* *..service.UserManager.*(..))" order="0" />
		<aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice"
			pointcut="execution(* *..service.UserManager.saveUser(..))" order="1" />
		<aop:advisor id="managerTx" advice-ref="txAdvice"
			pointcut="execution(* *..service.*Manager.*(..))" order="2" />
	</aop:config>

	<!-- Enable @Transactional support -->
	<tx:annotation-driven />

	<!-- Enable @AspectJ support -->
	<aop:aspectj-autoproxy />

	<!-- Enable @Configured support -->
	<aop:spring-configured />

	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- Read-only commented out to make things easier for end-users -->
			<!-- http://issues.appfuse.org/browse/APF-556 -->
			<!--tx:method name="get*" read-only="true"/-->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="userManagerTxAdvice">
		<tx:attributes>
			<tx:method name="save*" rollback-for="UserExistsException" />
		</tx:attributes>
	</tx:advice>

	<bean id="userSecurityAdvice" class="org.openhie.openempi.service.UserSecurityAdvice" />

	<!--
		===================================================================
	-->
	<!--
		Mail: Sender and Velocity configuration
	-->
	<!--
		===================================================================
	-->
	<bean id="mailEngine" class="org.openhie.openempi.service.MailEngine">
		<property name="mailSender" ref="mailSender" />
		<property name="velocityEngine" ref="velocityEngine" />
		<property name="from" value="${mail.default.from}" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- Uncomment if you need to authenticate with your SMTP Server -->
		<!--
			property name="username" value="${mail.username}"/> <property
			name="password" value="${mail.password}"/> <property
			name="javaMailProperties"> <value> mail.smtp.auth=true </value>
			</property
		-->
	</bean>

	<!-- Configure Velocity for sending e-mail -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="velocimacro.library"></prop>
			</props>
		</property>
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage"
		scope="prototype">
		<property name="from" value="${mail.default.from}" />
	</bean>

	<!--
		===================================================================
	-->
	<!--
		Security class from Spring Security - used to configure Password
	-->
	<!--
		Encryption in UserManagerImpl. Can override in security.xml.
	-->
	<!--
		===================================================================
	-->
	<bean id="passwordEncoder"
		class="org.springframework.security.providers.encoding.ShaPasswordEncoder" />

	<!--
		===================================================================
	-->
	<!--
		Managers: For accessing DAOs
	-->
	<!--
		===================================================================
	-->
	<bean id="manager" class="org.openhie.openempi.service.impl.UniversalManagerImpl">
		<property name="dao" ref="universalDao" />
	</bean>

	<bean id="lookupManager" class="org.openhie.openempi.service.impl.LookupManagerImpl">
		<property name="lookupDao" ref="lookupDao" />
	</bean>

	<bean id="userManager" class="org.openhie.openempi.service.impl.UserManagerImpl">
		<property name="userDao" ref="userDao" />
		<property name="userSessionDao" ref="userSessionDao" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>

	<bean id="roleManager" class="org.openhie.openempi.service.impl.RoleManagerImpl">
		<property name="roleDao" ref="roleDao" />
	</bean>

	<bean id="configuration" class="org.openhie.openempi.configuration.Configuration"
		init-method="init">
		<property name="configFile" value="/mpi-config.xml" />
	</bean>

	<bean id="context" class="org.openhie.openempi.context.Context">
		<property name="userManager" ref="userManager" />
		<property name="personManagerService" ref="personManagerService" />
		<property name="personQueryService" ref="personQueryService" />
		<property name="configuration" ref="configuration" />
		<property name="validationService" ref="validationService" />
		<property name="stringComparisonService" ref="stringComparisonService" />
		<property name="transformationService" ref="transformationService" />
		<property name="auditEventService" ref="auditEventService" />
	</bean>

	<bean id="personManagerService"
		class="org.openhie.openempi.service.impl.PersonManagerServiceImpl">
		<property name="personDao" ref="personDao" />
		<property name="personLinkDao" ref="personLinkDao" />
	</bean>

	<bean id="personQueryService"
		class="org.openhie.openempi.service.impl.PersonQueryServiceImpl">
		<property name="personDao" ref="personDao" />
		<property name="personLinkDao" ref="personLinkDao" />
	</bean>

	<bean id="auditEventService" class="org.openhie.openempi.service.impl.AuditEventServiceImpl"
		init-method="init">
		<property name="auditEventDao" ref="auditEventDao" />
	</bean>
	
	<bean id="validationService" class="org.openhie.openempi.service.impl.ValidationServiceImpl">
	</bean>

	<!--  Distance Metrics  -->
	<bean id="Exact"
		class="org.openhie.openempi.stringcomparison.metrics.ExactMatchDistanceMetric">
		<property name="name" value="Exact"/>
	</bean>
	<bean id="Jaro"
		class="org.openhie.openempi.stringcomparison.metrics.JaroDistanceMetric">
		<property name="name" value="Jaro"/>
	</bean>
	<bean id="JaroWinkler"
		class="org.openhie.openempi.stringcomparison.metrics.JaroWinklerAliasiDistanceMetric">
		<property name="name" value="JaroWinkler"/>
	</bean>
	<bean id="JaroWinklerV2"
		class="org.openhie.openempi.stringcomparison.metrics.JaroWinklerSimmetricsDistanceMetric">
		<property name="name" value="JaroWinklerV2"/>
	</bean>
	<bean id="Levenshtein"
		class="org.openhie.openempi.stringcomparison.metrics.LevenshteinDistanceMetric">
		<property name="name" value="Levenshtein"/>
	</bean>
	<bean id="NeedlemanWunsch"
		class="org.openhie.openempi.stringcomparison.metrics.NeedlemanWunschDistanceMetric">
		<property name="name" value="NeedlemanWunsch"/>
	</bean>
	<bean id="SmithWaterman"
		class="org.openhie.openempi.stringcomparison.metrics.SmithWatermanDistanceMetric">
		<property name="name" value="SmithWaterman"/>
	</bean>
	<bean id="MongeElkan"
		class="org.openhie.openempi.stringcomparison.metrics.MongeElkanDistanceMetric">
		<property name="name" value="MongeElkan"/>
	</bean>
	<bean id="Gotoh"
		class="org.openhie.openempi.stringcomparison.metrics.GotohDistanceMetric">
		<property name="name" value="Gotoh"/>
	</bean>
	<bean id="GotohWindowedAffine"
		class="org.openhie.openempi.stringcomparison.metrics.GotohWindowedAffineDistanceMetric">
		<property name="name" value="GotohWindowedAffine"/>
	</bean>
	<bean id="Block"
		class="org.openhie.openempi.stringcomparison.metrics.BlockDistanceMetric">
		<property name="name" value="Block"/>
	</bean>
	<bean id="Soundex"
		class="org.openhie.openempi.stringcomparison.metrics.SoundexDistanceMetric">
		<property name="name" value="Soundex"/>
	</bean>
	<bean id="Euclidean"
		class="org.openhie.openempi.stringcomparison.metrics.EuclideanDistanceMetric">
		<property name="name" value="Euclidean"/>
	</bean>
	<bean id="QGrams"
		class="org.openhie.openempi.stringcomparison.metrics.QGramsDistanceMetric">
		<property name="name" value="QGrams"/>
	</bean>
	<bean id="JaccardString"
		class="org.openhie.openempi.stringcomparison.metrics.JaccardSimilarityMetricStringVersion">
		<property name="name" value="JaccardString"/>
	</bean>
	<bean id="Cosine"
		class="org.openhie.openempi.stringcomparison.metrics.CosineSimilarityMetric">
		<property name="name" value="Cosine"/>
	</bean>
	<bean id="DiceString"
		class="org.openhie.openempi.stringcomparison.metrics.DiceSimilarityMetricStringVersion">
		<property name="name" value="DiceString"/>
	</bean>
	<bean id="Matching"
		class="org.openhie.openempi.stringcomparison.metrics.MatchingCoefficientMetric">
		<property name="name" value="Matching"/>
	</bean>
	<bean id="Overlap"
		class="org.openhie.openempi.stringcomparison.metrics.OverlapCoefficientMetric">
		<property name="name" value="Overlap"/>
	</bean>

	<bean id="stringComparisonService"
		class="org.openhie.openempi.stringcomparison.impl.StringComparisonServiceImpl">
		<property name="distanceMetricTypeMap">
			<map>
				<entry key="Exact" value-ref="Exact"/>
				<entry key="Jaro" value-ref="Jaro"/>
				<entry key="JaroWinkler" value-ref="JaroWinkler"/>
				<entry key="JaroWinklerV2" value-ref="JaroWinklerV2"/>
				<entry key="Levenshtein" value-ref="Levenshtein"/>				
				<entry key="NeedlemanWunsch" value-ref="NeedlemanWunsch"/>
				<entry key="SmithWaterman" value-ref="SmithWaterman"/>
				<entry key="MongeElkan" value-ref="MongeElkan"/>
				<entry key="Gotoh" value-ref="Gotoh"/>
				<entry key="GotohWindowedAffine" value-ref="GotohWindowedAffine"/>
				<entry key="Block" value-ref="Block"/>
				<entry key="Soundex" value-ref="Soundex"/>
				<entry key="Euclidean" value-ref="Euclidean"/>
				<entry key="QGrams" value-ref="QGrams"/>
				<entry key="JaccardString" value-ref="JaccardString"/>
				<entry key="Cosine" value-ref="Cosine"/>
				<entry key="DiceString" value-ref="DiceString"/>
				<entry key="Matching" value-ref="Matching"/>
				<entry key="Overlap" value-ref="Overlap"/>
			</map>
		</property>
	</bean>

	<!--  Field Transformation Functions  -->
	<bean id="Metaphone"
		class="org.openhie.openempi.transformation.function.MetaphoneFunction">
		<property name="name" value="Metaphone"/>
	</bean>
	<bean id="DoubleMetaphone"
		class="org.openhie.openempi.transformation.function.DoubleMetaphoneFunction">
		<property name="name" value="DoubleMetaphone"/>
	</bean>
	<bean id="SoundexFunction"
		class="org.openhie.openempi.transformation.function.SoundexFunction">
		<property name="name" value="SoundexFunction"/>
	</bean>
	<bean id="RefinedSoundex"
		class="org.openhie.openempi.transformation.function.RefinedSoundexFunction">
		<property name="name" value="RefinedSoundex"/>
	</bean>
	
	<!-- BHT (ADDED) -->
	<bean id="NOOPFunction"
		class="com.vangent.hieos.transformation.function.NOOPFunction">
		<property name="name" value="NOOPFunction"/>
	</bean>

	<bean id="transformationService"
		class="org.openhie.openempi.transformation.impl.TransformationServiceImpl">
		<property name="transformationFunctionTypeMap">
			<map>
				<entry key="Metaphone" value-ref="Metaphone"/>
				<entry key="DoubleMetaphone" value-ref="DoubleMetaphone"/>
				<entry key="SoundexFunction" value-ref="SoundexFunction"/>
				<entry key="RefinedSoundex" value-ref="RefinedSoundex"/>
				<!-- BHT (added) -->
				<entry key="NOOPFunction" value-ref="NOOPFunction"/>
			</map>
		</property>
	</bean>

	<bean id="personLoaderManager" class="org.openhie.openempi.loader.SpringPersonLoaderManager">
		<property name="username" value="admin" />
		<property name="password" value="admin" />
	</bean>

	<bean id="dataLoader" class="org.openhie.openempi.loader.NominalSetFileLoader">
	</bean>

	<bean id="nominalSetDataLoader" class="org.openhie.openempi.loader.NominalSetFileLoader">
	</bean>
</beans>
