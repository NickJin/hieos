/*
 * This code is subject to the HIEOS License, Version 1.0
 *
 * Copyright(c) 2008-2009 Vangent, Inc.  All rights reserved.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * AdtRecordBean.java
 *
 * Created on September 29, 2005, 11:21 AM
 *
 */
package com.vangent.hieos.adt.db;

import com.vangent.hieos.xutil.exception.XdsInternalException;

import java.sql.SQLException;

/**
 *
 * @author mccaffrey
 */
public class AdtRecordBean {

    private AdtRecord record = null;
    private int uuidCharsToUse = 15;
    /**
     *
     */
    public static final String PATIENT_ID_DOMAIN_SEPARATOR = "^^^";
    /**
     *
     */
    public static final String FAKE_PATIENT_ID_PREFIX = "";

    /** Creates a new instance of AdtRecordBean
     */
    public AdtRecordBean() {
        record = new AdtRecord();
    }

    /**
     *
     * @return
     */
    public String getPatientId() {
        return record.getPatientId();
    }

    /**
     *
     * @param patientId
     */
    public void setPatientId(String patientId) {
        record.setPatientId(patientId);
    }

    /**
     *
     * @return
     */
    public String getPatientUUID() {
        return record.getUuid();
    }

    /**
     *
     * @param uuid
     */
    public void setPatientUUID(String uuid) {
        record.setUuid(uuid);
    }

    /**
     *
     * @param domain
     */
    public void setPatientIdAutoGenerated(String domain) {
        record.setPatientId(FAKE_PATIENT_ID_PREFIX + AdtRecordBean.firstNChars(AdtRecordBean.stripUuid(this.getId()), uuidCharsToUse) + AdtRecordBean.PATIENT_ID_DOMAIN_SEPARATOR + domain);
    }

    /**
     *
     * @return
     */
    public String getTimestamp() {
        return record.getTimestamp();
    }

    /**
     *
     * @param timestamp
     */
    public void setTimestamp(String timestamp) {
        record.setTimestamp(timestamp);
    }

    /**
     *
     * @param n
     */
    public void setUuidChars(int n) {
        uuidCharsToUse = n;
    }

    /**
     * 
     * @throws java.sql.SQLException
     * @throws com.vangent.hieos.xutil.exception.XdsInternalException
     */
    public void saveToDatabase() throws SQLException, XdsInternalException {
        record.saveToDatabase();
    }

    /**
     *
     * @return
     */
    public String getId() {
        return record.getUuid();
    }

    /**
     *
     * @return
     */
    public AdtRecord getRecord() {
        return record;
    }

    /**
     *
     * @param record
     */
    public void setRecord(AdtRecord record) {
        this.record = record;
    }

    /**
     *
     * @param uuid
     * @return
     */
    static public String stripUuid(String uuid) {
        String withoutColons = uuid.substring(uuid.lastIndexOf(':') + 1);
        StringBuffer withoutHyphens = new StringBuffer();
        for (int i = 0; i < withoutColons.length(); i++) {
            if (withoutColons.charAt(i) != '-') {
                withoutHyphens.append(withoutColons.charAt(i));
            }
        }
        return withoutHyphens.toString();
    }

    /**
     *
     * @param str
     * @param n
     * @return
     */
    static public String firstNChars(String str, int n) {
        return str.substring(0, n);
    }
 
    /**
     *
     * @return
     */
    public String getPatientStatus() {
        return record.getPatientStatus();
    }

    /**
     *
     * @param patientStatus
     */
    public void setPatientStatus(String patientStatus) {
        record.setPatientStatus(patientStatus);
    }
}
